'''
PROJECT:     Apiset info
LICENSE:     MIT (https://spdx.org/licenses/MIT)
PURPOSE:     Create hugo pages from the apisets data files
COPYRIGHT:   Copyright 2019 Mark Jansen (mark.jansen@reactos.org)
'''

from pathlib import Path
import re

SCRIPTDIR = Path(__file__).parent
DEFAULTDATADIR = Path(SCRIPTDIR).parent / 'data'
#DEFAULTINPUTDIR = Path(SCRIPTDIR).parent / 'bin'
DEFAULTCONTENTDIR = Path(SCRIPTDIR).parent / 'content'


HUGO_APISETSCHEMA_TEMPLATE = """
---
# This file is auto-generated by a script
title: "{version}"
slug: "{version}"
weight: {weight}
---

{{{{< apisetschema >}}}}

"""



def natural_key(string_):
    """See http://www.codinghorror.com/blog/archives/001018.html"""
    return [int(s) if s.isdigit() else s for s in re.split(r'(\d+)', string_)]

def pages_from_data(data_dir, content_dir):
    schema_content_dir = content_dir / 'apisetschemas'
    print('Creating pages')
    # Clean apisetschema pages
    for filename in schema_content_dir.glob('_autogenerated_*.md'):
        filename.unlink()

    sources = []
    for filename in (data_dir / 'apisetschema').glob('*.json'):
        sources.append(filename.stem)
    # Create new apisetschema pages
    weight = 1
    for source in sorted(sources, key=natural_key):
        filename = '_autogenerated_{:03d}.md'.format(weight)
        with open(schema_content_dir / filename, 'w') as markdown_file:
            markdown_file.write(HUGO_APISETSCHEMA_TEMPLATE.format(version=source, weight=weight))
        weight += 1
    print('Done')


if __name__ == '__main__':
    pages_from_data(data_dir= DEFAULTDATADIR, content_dir= DEFAULTCONTENTDIR)

